DROP TABLE IF EXISTS categories, users, events, requests, comments, comments_likes, comments_complaints, comments_review, compilations, events_by_compilations CASCADE;

CREATE TABLE IF NOT EXISTS categories (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name varchar(50) UNIQUE NOT NULL,
  CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email varchar(300) UNIQUE,
  name varchar(300),
  CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  initiator_id bigint NOT NULL REFERENCES users(id) on delete cascade,
  annotation varchar(2000) NOT NULL,
  category_id integer NOT NULL REFERENCES categories(id) on delete cascade,
  description varchar(7000) NOT NULL,
  event_date timestamp NOT NULL,
  lat real NOT NULL,
  lon real NOT NULL,
  paid bool,
  participant_limit integer,
  request_moderation bool,
  title varchar(120) NOT NULL,
  created_on timestamp NOT NULL,
  published_on timestamp,
  state varchar(30),
  comments_permission bool,
  CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS requests (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id bigint NOT NULL REFERENCES events(id) on delete cascade,
  user_id bigint NOT NULL REFERENCES users(id) on delete cascade,
  status varchar(20),
  created_on timestamp NOT NULL,
  CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS comments (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  author_id bigint NOT NULL REFERENCES users(id) on delete no action,
  event_id bigint NOT NULL REFERENCES events(id) on delete cascade,
  text varchar(4000) NOT NULL,
  created_on timestamp,
  is_updated boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS comments_likes (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id bigint NOT NULL REFERENCES users(id) on delete cascade,
  comment_id uuid NOT NULL REFERENCES comments(id) on delete cascade,
  CONSTRAINT pk_comments_like PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments_complaints (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id bigint NOT NULL REFERENCES users(id) on delete cascade,
  comment_id uuid NOT NULL REFERENCES comments(id) on delete cascade,
  CONSTRAINT pk_comments_complaints PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments_review (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  comment_id uuid NOT NULL REFERENCES comments(id) on delete cascade,
  complaints integer NOT NULL,
  CONSTRAINT pk_comments_complaints_for_review PRIMARY KEY (id)
);

CREATE TABLE if not exists compilations (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  is_pinned BOOLEAN NOT NULL,
  title VARCHAR(50) UNIQUE NOT NULL,
  CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE if not exists events_by_compilations (
  compilation_id bigint NOT NULL REFERENCES compilations (id) on delete cascade,
  event_id bigint NOT NULL REFERENCES events (id) on delete cascade,
  PRIMARY KEY (compilation_id, event_id)
);